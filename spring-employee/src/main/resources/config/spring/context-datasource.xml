<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- datasource -->
	<!-- HSQL
	<jdbc:embedded-database id="hsqlDataSource"
		type="HSQL">
		<jdbc:script location="classpath:/config/etc/schema.sql" />
	</jdbc:embedded-database>
 	-->
	
	<bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName" value="#{jdbc['jdbc.driver']}" />
		<property name="url" value="#{jdbc['jdbc.url']}" />
		<property name="username" value="#{jdbc['jdbc.username']}" />
		<property name="password" value="#{jdbc['jdbc.password']}" />

		<property name="initialSize" value="5" />
		<property name="maxActive" value="200" />
		<property name="minIdle" value="100" />
		<!-- 커넥션 풀에서 커넥션을 가져올때 커넥션이 유효한지 검사한다 -->
		<property name="testOnBorrow" value="true" />
 		<!-- 장시간 DB 작업이 없을 경우에도 지속적으로 validationQuery를 전송하여 연결이끊기는 것을 방지한다 -->
		<property name="testWhileIdle" value="true" />
 		<!-- 커넥션 풀에 커넥션을 반환할때 커넥션이 유효한지 검사한다 -->
		<property name="testOnReturn" value="true" />
		<property name="validationQuery" value="select 1" />		
	</bean>
 	
	<!-- sql spy -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="mysqlDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="margin" value="19" />
				<property name="sqlPrefix" value="SQL:::" />
			</bean>
		</property>
	</bean>

	<!-- transaction annotation -->
	<tx:annotation-driven />

	<!-- transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:config>
		<aop:pointcut id="transactionOperation"
			expression="execution(* com.o4u.bw..impl.*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionOperation" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>


	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/config/mybatis/sql-map-config.xml" />		
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

</beans>